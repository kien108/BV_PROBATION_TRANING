------------ TOPIC 1: REACT BASIC -----------------
I. New words
1. blueprint: bản thiết kế
2. instance: giống như khai báo bằng từ khóa new trong class (ex: dog = new Animal())
3. declare: khai báo
4. utilities: tiện ích
5. principle: nguyên tắc
6. substitution: thay thế


1. useState (quản lý state)
- Tạo nên 1 state và state này chỉ có thể thay đổi được bằng setState
- Nếu như giá trị initState phức tạp: useState(() => return abc)
- Nếu như giá trị state phụ thuộc vào prevState: setState(prev => prev + 1)
- Khi 1 state truyền đi giữa nhiều component, ta sử dụng context or lifting state up
* Lifting state up: nâng trạng thái lên. Đây chỉ 1 component con di chuyển state cục bộ lên cho cha gần nhất và nhận các props thay thế.
ex: <Input value={value} onChange={handelChange}/>

2. useRef (lưu trữ mutation state: state đột biến)
- Khi ref thay đổi component k re-render
- giá trị ref k đổi sau mỗi lần render
- Ta dùng ref hướng tới DOM(trigger style like toggle modal) or setTimeout

3. useReducer
- Được xem như là 1 redux thu nhỏ giúp sử dụng global state.
- Giúp tách biệt business logic ra khỏi component
- Khai báo: const [state: user, dispatch] = useReducer(reducer, initState)

4. useEffect (quản lý lifecycle - quản lý sự thay đổi state)
- Nhận vào 2 params: callback function và list dependencies.
- callback return là cleanup: Dùng để clear eventlistener or reset data cho redux.

------------ TOPIC 2: DESIGN COMPONENTS -----------------
1. Thiết kế theo nguyên tắc SOLID
- S: Mỗi một component chỉ nên thực hiện 1 vai trò/ chức năng cụ thể mà thôi.
- O: Các component chỉ nên kế thừa và mở rộng chứ không nên sửa đổi component cũ.
- L: Nếu extend một component từ component khác thì các chức năng vẫn phải thực hiện như cũ (ví dụ ta custom lại Input từ third-party thì cách sử dụng phải như cũ)
- I: Nên tách các component ra để thực hiện những vai trò cụ thể
- D: Các component phụ thuộc vào lớp trừu tượng (React.component)

2. Các loại component
- Layout component: Là thành phần chung của app, không mang chức năng cụ thể và dùng để render ra UI
- Feature component: Được cấu thành từ các layout component, mang chức năng cụ thể giải quyết một module. (Business logic)

3. Layout component (Button, Dropdown, modal, Calendar,...)
- Được sử dụng trong nhiều module mang lại tính thống nhất
- Phải thiết kế đơn giản để có thể reuse và mang tính chất abstract để có thể thử dụng nhiều vị trí.

4. Feature Components
- Thiết kế theo quy tắc (Ví dụ module login)
+ LoginPage: component được redirect từ routes (ở đây ta lấy các params và truyền vào con dưới dạng props)
+ LoginContainer: Sử dụng bên trong LoginPage dùng làm wrapper
+ LoginComponent: Các thành phần nhỏ nhất, cấu thành nên LoginPage. Các component này có thể được reuse ở các feature khác.

